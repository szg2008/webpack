webpack:
	1.以CommonJS的形式进行书写，并且对AMD/CMD的支持也很全面,兼容性强
	2.能够被模块化的不仅仅是js了，json，css等通过配置都可以被模块化
	3.开发便捷，能够替代部分gulp工作，压缩，图片转码，打包等
	4.扩展性强，插件机制比较完善，自动检测进行浏览器的刷新操作
	5.loaders:告知项目中的每一类文件怎么处理，比如.css,.js,.json,.png
	6.缓存文件hash和chunkhash的区别：
		hash：一个hash值作用域整个项目文件，即项目中所有的文件的hash是相同的，如果修改了其中一个文件，webpack将重新构建一次，所有的文件的hash值都改变了，即原来没有修改的文件也失去了缓存，重新请求
		chunkhash:针对模块的，每个模块的文件对应一个chunkhash值，某个文件修改了，这个文件所对应的模块的hash值改变了，其他模块的hash保持不变，继续走缓存
	7.webpack将一切都视为js模块，如果不是js文件就作为编译入口，都引入到js文件中进行编译
	8.前端构建的打包工具，能把前端的各种资源作为模块进行处理和使用
	9.异步加载：使用require.ensure进行包裹，里面所有的依赖会单独打包生成一个文件，每个ensure单独生成一个文件，文件的命名需要再output中进行设置
	10.Webpack的配置主要为了这几大项目：
　　    entry：js入口源文件
　　    output：生成文件
　　    module：进行字符串的处理
　　    resolve：文件路径的指向
　　    plugins：插件，比loader更强大，能使用更多webpack的api